<Project>
  
  <PropertyGroup>
    <!-- First check if OPENVINO_RUNTIME_PATH environment variable is set -->
    <OpenVINOGenAIRuntimePath Condition="'$(OpenVINOGenAIRuntimePath)' == '' AND '$(OPENVINO_RUNTIME_PATH)' != ''">$(OPENVINO_RUNTIME_PATH)</OpenVINOGenAIRuntimePath>
    
    <!-- For NuGet package installations: look for libraries in the package's runtimes folder -->
    <!-- When installed via NuGet, this targets file is in packages/Fluid.OpenVINO.GenAI/build/ -->
    <!-- The native libraries are in packages/Fluid.OpenVINO.GenAI/runtimes/[rid]/native/ -->
    <OpenVINOGenAIRuntimePath Condition="'$(OpenVINOGenAIRuntimePath)' == '' AND $([MSBuild]::IsOSPlatform('Windows')) AND Exists('$(MSBuildThisFileDirectory)..\runtimes\win-x64\native')">$(MSBuildThisFileDirectory)..\runtimes\win-x64\native</OpenVINOGenAIRuntimePath>
    <OpenVINOGenAIRuntimePath Condition="'$(OpenVINOGenAIRuntimePath)' == '' AND $([MSBuild]::IsOSPlatform('Linux')) AND Exists('$(MSBuildThisFileDirectory)../runtimes/linux-x64/native')">$(MSBuildThisFileDirectory)../runtimes/linux-x64/native</OpenVINOGenAIRuntimePath>
    
    <!-- For local development: look in the solution's build directory -->
    <SolutionDir>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)../..'))</SolutionDir>
    <OpenVINOGenAIRuntimePath Condition="'$(OpenVINOGenAIRuntimePath)' == '' AND $([MSBuild]::IsOSPlatform('Windows')) AND Exists('$(SolutionDir)\build\native\runtimes\win-x64\native')">$(SolutionDir)\build\native\runtimes\win-x64\native</OpenVINOGenAIRuntimePath>
    <OpenVINOGenAIRuntimePath Condition="'$(OpenVINOGenAIRuntimePath)' == '' AND $([MSBuild]::IsOSPlatform('Windows')) AND Exists('$(MSBuildThisFileDirectory)..\..\build\native\runtimes\win-x64\native')">$(MSBuildThisFileDirectory)..\..\build\native\runtimes\win-x64\native</OpenVINOGenAIRuntimePath>
    
    <OpenVINOGenAIRuntimePath Condition="'$(OpenVINOGenAIRuntimePath)' == '' AND $([MSBuild]::IsOSPlatform('Linux')) AND Exists('$(SolutionDir)/build/native/runtimes/linux-x64/native')">$(SolutionDir)/build/native/runtimes/linux-x64/native</OpenVINOGenAIRuntimePath>
    <OpenVINOGenAIRuntimePath Condition="'$(OpenVINOGenAIRuntimePath)' == '' AND $([MSBuild]::IsOSPlatform('Linux')) AND Exists('$(MSBuildThisFileDirectory)../../build/native/runtimes/linux-x64/native')">$(MSBuildThisFileDirectory)../../build/native/runtimes/linux-x64/native</OpenVINOGenAIRuntimePath>
    
    <!-- In CI environment, suppress warnings about missing native libraries since they're downloaded separately -->
    <SuppressOpenVINOWarnings Condition="'$(CI)' == 'true'">true</SuppressOpenVINOWarnings>
    
    <!-- Determine native library extension based on platform -->
    <NativeLibExtension Condition="$([MSBuild]::IsOSPlatform('Windows'))">.dll</NativeLibExtension>
    <NativeLibExtension Condition="$([MSBuild]::IsOSPlatform('Linux'))">.so</NativeLibExtension>
  </PropertyGroup>

  <!-- Copy native libraries to output directory -->
  <Target Name="CopyOpenVINOGenAINativeLibraries" 
          BeforeTargets="Build" 
          Condition="'$(TargetFramework)' != '' AND '$(RuntimeIdentifier)' != 'browser-wasm'">
    
    <!-- Include all native libraries from the runtime directory based on platform -->
    <!-- Search recursively to handle nested directory structures like intel64/Release -->
    <ItemGroup Condition="Exists('$(OpenVINOGenAIRuntimePath)')">
      <OpenVINOGenAINativeLibraries Include="$(OpenVINOGenAIRuntimePath)/**/*$(NativeLibExtension)" />
    </ItemGroup>

    <!-- If no libraries found with recursive search, try flat directory -->
    <ItemGroup Condition="'@(OpenVINOGenAINativeLibraries)' == '' AND Exists('$(OpenVINOGenAIRuntimePath)')">
      <OpenVINOGenAINativeLibraries Include="$(OpenVINOGenAIRuntimePath)/*$(NativeLibExtension)" />
    </ItemGroup>

    <!-- Copy native libraries to output directory (flattened structure) -->
    <Copy 
      SourceFiles="@(OpenVINOGenAINativeLibraries)" 
      DestinationFolder="$(OutputPath)" 
      SkipUnchangedFiles="true"
      Condition="'@(OpenVINOGenAINativeLibraries)' != ''" />

    <!-- Also copy to intermediate output directory for debugging -->
    <Copy 
      SourceFiles="@(OpenVINOGenAINativeLibraries)" 
      DestinationFolder="$(IntermediateOutputPath)" 
      SkipUnchangedFiles="true"
      Condition="'@(OpenVINOGenAINativeLibraries)' != ''" />

    <Message Text="OpenVINO GenAI: Copied native libraries from $(OpenVINOGenAIRuntimePath) to $(OutputPath)" 
             Importance="normal" 
             Condition="'@(OpenVINOGenAINativeLibraries)' != ''" />

    <Message Text="OpenVINO GenAI: Using runtime path from OPENVINO_RUNTIME_PATH environment variable: $(OPENVINO_RUNTIME_PATH)" 
             Importance="high" 
             Condition="'$(OPENVINO_RUNTIME_PATH)' != ''" />

    <!-- Provide helpful error message with setup instructions -->
    <Warning Text="OpenVINO GenAI: Native libraries not found at $(OpenVINOGenAIRuntimePath). Troubleshooting:&#xA;1. If using NuGet package: Ensure package restored correctly and check $(MSBuildThisFileDirectory)..\runtimes\[win-x64|linux-x64]\native\&#xA;2. For local development: Download OpenVINO GenAI runtime from https://storage.openvinotoolkit.org/repositories/openvino_genai/packages/&#xA;   Extract to $(SolutionDir)/build/native/runtimes/[win-x64|linux-x64]/native/&#xA;3. For custom installations: Set OPENVINO_RUNTIME_PATH environment variable to your runtime directory" 
             Condition="'@(OpenVINOGenAINativeLibraries)' == '' AND '$(SuppressOpenVINOWarnings)' != 'true'" />
  </Target>

  <!-- For publish scenarios -->
  <Target Name="PublishOpenVINOGenAINativeLibraries" 
          BeforeTargets="PublishBuild" 
          Condition="'$(PublishDir)' != '' AND Exists('$(OpenVINOGenAIRuntimePath)')">
    
    <ItemGroup>
      <OpenVINOGenAINativeLibrariesPublish Include="$(OpenVINOGenAIRuntimePath)/**/*$(NativeLibExtension)" />
    </ItemGroup>

    <!-- If no libraries found with recursive search, try flat directory -->
    <ItemGroup Condition="'@(OpenVINOGenAINativeLibrariesPublish)' == ''">
      <OpenVINOGenAINativeLibrariesPublish Include="$(OpenVINOGenAIRuntimePath)/*$(NativeLibExtension)" />
    </ItemGroup>

    <Copy 
      SourceFiles="@(OpenVINOGenAINativeLibrariesPublish)" 
      DestinationFolder="$(PublishDir)" 
      SkipUnchangedFiles="true"
      Condition="'@(OpenVINOGenAINativeLibrariesPublish)' != ''" />

    <Message Text="OpenVINO GenAI: Published native libraries from $(OpenVINOGenAIRuntimePath) to $(PublishDir)" 
             Importance="normal" 
             Condition="'@(OpenVINOGenAINativeLibrariesPublish)' != ''" />
  </Target>

</Project>